export class Utils {
    /**
     *
     */
    constructor(private metadata: any) {}
    
    validator(xpath: string, currentValue: any, newValue: any) {
        if (newValue.meta && (newValue.meta.null || newValue.meta['xsi:nil'])) {
            return null;
        }
        let parts = xpath.split('/');
        if (currentValue) return newValue; //if currentValue is there means, this is already part of an array so return the element as is.
        // this is to account SOAP Envelope, Header and response root, like '/SOAP:Envelope/SOAP:Body/GetUsersResponse'
        // so if the path <= 3, it means we dont care about it
        if (!parts || parts.length <= 3) 
            return newValue;
        let dt = elementType(parts.slice(3).join('/'), this.metadata); // remove the Envelope and Header parts
        if (dt == 'array' && newValue) 
            return [newValue]
        if (dt == 'date' && newValue)
            return new Date(newValue+'z');
        return newValue;

        function elementType(path: string, obj: any): string {
            // we are checking if we are at the leaf element, if we are at the leaf and still haven't found an array, 
            // we return not an array. otherwise take the first element and process
            if (!Array.isArray(obj) && obj.element)
                obj = obj.element;
            else if (!Array.isArray(obj))
                return 'none';
            if (path.includes('/')) { // we are still not in the end of the path, so process more
                let t = obj.find((item: { name: string; }) => item.name == path.split('/')[0]);
                if (!t) // this may mean we dont have correct metadata
                    return 'none';
                return elementType(path.substring(path.indexOf('/') + 1), t);
            } else {
                let t = obj.find((item: { name: string; }) => item.name == path);
                if (t && t.maxOccurs && (t.maxOccurs == 'unbounded' || t.maxOccurs > 1))
                    return 'array';
                else if (t && t.eType && t.eType.indexOf("date") >= 0)
                    return 'date';
                else
                    return 'none';                    
            }
        }
    }
}